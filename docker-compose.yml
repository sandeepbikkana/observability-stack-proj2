version: "3.9"

x-logging: &default-logging
  options:
    max-size: "10m"
    max-file: "3"
  driver: json-file

networks:
  observability:
    driver: bridge

volumes:
  grafana-data:
  prometheus-data:
  loki-data:

services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    image: sample-app:latest
    environment:
      - OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - JAEGER_ENDPOINT=${JAEGER_ENDPOINT}
    ports:
      - "5000:5000"
    labels:
      - "logging=promtail"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5
    logging: *default-logging
    networks: [observability]

  prometheus:
    image: prom/prometheus:v2.54.1
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=15d"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks: [observability]
    logging: *default-logging

  loki:
    image: grafana/loki:3.2.1
    command: [ "-config.file=/etc/loki/config.yml" ]
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/config.yml:ro
      - loki-data:/loki
    networks: [observability]
    logging: *default-logging

  promtail:
    image: grafana/promtail:3.2.1
    command: [ "-config.file=/etc/promtail/config.yml" ]
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks: [observability]
    logging: *default-logging

  jaeger:
    image: jaegertracing/all-in-one:1.58
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"   # Jaeger UI
      - "4317:4317"     # OTLP gRPC
      - "4318:4318"     # OTLP HTTP
      - "14268:14268"   # Jaeger collector HTTP
    networks: [observability]
    logging: *default-logging

  grafana:
    image: grafana/grafana:11.1.3
    depends_on:
      - prometheus
      - loki
      - jaeger
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-jaeger-datasource
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks: [observability]
    logging: *default-logging
